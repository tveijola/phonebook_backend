{"version":3,"sources":["components/Book.js","components/PersonForm.js","components/Filter.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Number","props","name","num","onClick","del","Book","persons","map","person","key","id","number","PersonForm","newName","newNum","handleNameChange","handleNumChange","addPerson","onSubmit","value","onChange","type","Filter","filter","filterShown","Notification","notification","message","isError","className","axios","get","then","response","data","newPerson","post","newObject","put","delete","App","useState","setPersons","setNewName","setNewNum","setFilter","setNotification","useEffect","personService","initialPersons","notify","clearNotification","filteredPersons","length","p","toLowerCase","includes","event","target","preventDefault","replace","duplicate","some","console","log","window","confirm","promise","find","returnedPerson","concat","setTimeout","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5983fb82.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Number = (props) => {\r\n  return (\r\n    <tr>\r\n      <td>{props.name}</td>\r\n      <td>{props.num}</td>\r\n      <td>\r\n        <button onClick={props.del}>delete</button>\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nconst Book = (props) => {\r\n  return (\r\n    <div>\r\n      <h2>Numbers</h2>\r\n      <table>\r\n        <tbody>\r\n          {props.persons.map(person =>\r\n            <Number\r\n              key={person.id}\r\n              name={person.name}\r\n              num={person.number}\r\n              del={() => props.del(person.id)} />\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Book","import React from 'react'\r\n\r\nconst PersonForm = ({ newName, newNum, handleNameChange, handleNumChange, addPerson }) => (\r\n  <div><h3>Add a new entry</h3>\r\n    <form onSubmit={addPerson}>\r\n      <div>Name:   <input value={newName} onChange={handleNameChange} /></div>\r\n      <div>Number: <input value={newNum} onChange={handleNumChange} /></div>\r\n      <div><button type=\"submit\">add</button></div>\r\n    </form>\r\n  </div>\r\n)\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Filter = ({ filter, filterShown }) => (\r\n  <div>\r\n    Filter shown with:\r\n    <input\r\n      value={filter}\r\n      onChange={filterShown} />\r\n  </div>\r\n)\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Notification = ({notification}) => {\r\n  if (notification.message === null) {\r\n    return null\r\n  }\r\n  const type = (notification.isError) ? \"error\" : \"notification\"\r\n  return (\r\n    <div className={type}>{notification.message}</div>\r\n  )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newPerson) => {\r\n  const request = axios.post(baseUrl, newPerson)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, update, remove}","import React, { useState, useEffect } from 'react'\nimport Book from './components/Book'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNum, setNewNum] = useState('')\n  const [filter, setFilter] = useState('')\n  const [notification, setNotification] = useState({\n    message: null,\n    isError: false\n  })\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const notify = (message, isError) => ({ message, isError })\n\n  const refreshPhonebook = () => {\n    personService\n      .getAll()\n      .then(persons => {\n        setPersons(persons)\n      })\n  }\n\n  const clearForms = () => {\n    setNewName('')\n    setNewNum('')\n  }\n\n  const clearNotification = () => {\n    setNotification({\n      message: null,\n      isError: false\n    })\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    let replace = false\n    const duplicate = persons.some(person => person.name.toLowerCase() === newName.toLowerCase())\n    if (duplicate) {\n      console.log('DUPLICATE FOUND')\n      replace = window.confirm(\n        `${newName} is already added to phonebook, replace the old number with a new one?`\n      )\n    }\n\n    if (duplicate && !replace) {\n      return\n    }\n\n    let promise;\n    const newPerson = {\n      name: newName,\n      number: newNum\n    }\n\n    if (replace) {\n      newPerson.id = persons.find(p => p.name.toLowerCase() === newName.toLowerCase()).id\n      promise = personService\n        .update(newPerson.id, newPerson)\n        .then(returnedPerson => setPersons(persons.map(p => p.id !== newPerson.id ? p : returnedPerson)))\n    } else {\n      promise = personService\n        .create(newPerson)\n        .then(returnedPerson => setPersons(persons.concat(returnedPerson)))\n    }\n    \n    promise.then(() => {\n      setNotification(notify(`Added ${newName}`, false))\n      setTimeout(() => clearNotification(), 3000)\n      clearForms()\n    }).catch(error => {\n      setNotification(notify(`Information of ${newName} has been deleted!`, true))\n      setTimeout(() => clearNotification, 5000)\n      refreshPhonebook();\n    })\n  }\n\n  const deletePerson = (id) => {\n    const confirm = window.confirm(`Delete ${persons.find(p => p.id === id).name}?`)\n    if (confirm) {\n      personService\n        .remove(id)\n        .then(setPersons(persons.filter(p => p.id !== id)))\n    }\n  }\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumChange = (event) => setNewNum(event.target.value)\n  const filterShown = (event) => setFilter(event.target.value)\n\n  const filteredPersons = filter.length === 0\n    ? persons\n    : persons.filter(p => p.name.toLowerCase().includes(filter.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Filter filter={filter} filterShown={filterShown} />\n      <PersonForm\n        newName={newName} handleNameChange={handleNameChange}\n        newNum={newNum} handleNumChange={handleNumChange} addPerson={addPerson} />\n      <Book persons={filteredPersons}\n        del={deletePerson} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}